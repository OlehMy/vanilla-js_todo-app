{"version":3,"sources":["scripts/main.js"],"names":["initialTodos","id","title","completed","root","document","querySelector","newTodoField","itemsList","allToggler","clearCompletedButton","filter","initTodos","todos","forEach","insertAdjacentHTML","updateInfo","counter","activeTogglers","querySelectorAll","completedTogglers","footer","toggleAllContainer","hasTodos","length","innerHTML","checked","hidden","addEventListener","event","filterValue","target","dataset","filterButtons","button","classList","toggle","togglers","toggler","item","closest","remove","key","value","Date","matches"],"mappings":"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","file":"main.6c7eca78.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst initialTodos = [\n  {\n    id: 1, title: 'HTML', completed: false,\n  },\n  {\n    id: 2, title: 'CSS', completed: true,\n  },\n  {\n    id: 3, title: 'JS', completed: false,\n  },\n];\n\nconst root = document.querySelector('.todoapp');\nconst newTodoField = root.querySelector('.new-todo');\nconst itemsList = root.querySelector('.todo-list');\nconst allToggler = root.querySelector('.toggle-all');\nconst clearCompletedButton = root.querySelector('.clear-completed');\nconst filter = root.querySelector('.filters');\n\nconst initTodos = (todos) => {\n  todos.forEach(({ id, title, completed }) => {\n    itemsList.insertAdjacentHTML('beforeend', `\n    <li class=\"todo-item ${completed ? 'completed' : ''}\">\n      <input\n        type=\"checkbox\"\n        class=\"toggle\"\n        id=\"toggle-${id}\"\n        ${completed ? 'checked' : ''}\n      >\n      <label for=\"toggle-${id}\">${title}</label>\n      <button type=\"button\" class=\"destroy\"></button>\n    </li>\n  `);\n  });\n};\n\ninitTodos(initialTodos);\n\nconst updateInfo = () => {\n  const counter = root.querySelector('.todo-count');\n  const activeTogglers = root.querySelectorAll('.toggle:not(:checked)');\n  const completedTogglers = root.querySelectorAll('.toggle:checked');\n  const footer = root.querySelector('.footer');\n  const toggleAllContainer = root.querySelector('.toggle-all-container');\n  const hasTodos = activeTogglers.length > 0 || completedTogglers.length > 0;\n\n  counter.innerHTML = `${activeTogglers.length} items left`;\n  allToggler.checked = activeTogglers.length === 0;\n  clearCompletedButton.hidden = completedTogglers.length === 0;\n\n  footer.hidden = !hasTodos;\n  toggleAllContainer.hidden = !hasTodos;\n};\n\nupdateInfo();\n\nfilter.addEventListener('click', (event) => {\n  const filterValue = event.target.dataset.filter;\n\n  if (!filterValue) {\n    return;\n  }\n\n  const filterButtons = root.querySelectorAll('[data-filter]');\n\n  for (const button of filterButtons) {\n    button.classList.toggle('selected', event.target === button);\n  };\n\n  const togglers = root.querySelectorAll('.toggle');\n\n  for (const toggler of togglers) {\n    const item = toggler.closest('.todo-item');\n\n    switch (filterValue) {\n      case 'all':\n        item.hidden = false;\n        break;\n\n      case 'active':\n        item.hidden = toggler.checked;\n        break;\n\n      case 'completed':\n        item.hidden = !toggler.checked;\n        break;\n    }\n  }\n});\n\nclearCompletedButton.addEventListener('click', () => {\n  const completedTogglers = root.querySelectorAll('.toggle:checked');\n\n  for (const toggler of completedTogglers) {\n    toggler.closest('.todo-item').remove();\n  }\n\n  updateInfo();\n});\n\nallToggler.addEventListener('change', () => {\n  const togglers = root.querySelectorAll('.toggle');\n  const checked = allToggler.checked;\n\n  for (const toggler of togglers) {\n    toggler.checked = checked;\n    toggler.closest('.todo-item').classList.toggle('completed', checked);\n  }\n});\n\nnewTodoField.addEventListener('keydown', (event) => {\n  if (event.key !== 'Enter') {\n    return;\n  };\n\n  if (!newTodoField.value) {\n    return;\n  };\n\n  const id = +new Date();\n\n  itemsList.insertAdjacentHTML('beforeend', `\n    <li class=\"todo-item\">\n      <input\n        type=\"checkbox\"\n        class=\"toggle\"\n        id=\"toggle-${id}\"\n      >\n      <label for=\"toggle-${id}\">${newTodoField.value}</label>\n      <button type=\"button\" class=\"destroy\"></button>\n    </li>\n  `);\n\n  newTodoField.value = '';\n\n  updateInfo();\n});\n\nitemsList.addEventListener('click', (event) => {\n  if (!event.target.matches('.destroy')) {\n    return;\n  }\n\n  event.target.closest('.todo-item').remove();\n  updateInfo();\n});\n\nitemsList.addEventListener('change', (event) => {\n  if (!event.target.matches('.toggle')) {\n    return;\n  }\n\n  event.target\n    .closest('.todo-item')\n    .classList.toggle('completed', event.target.checked);\n\n  updateInfo();\n});\n"]}